Question #1:
1. Write a react function that takes the following input:
rooms = [
    { room_type: "Queen", vacant_rooms: 5, price: 100 },
    { room_type: "Double", vacant_rooms: 3, price: 75 },
    { room_type: "Twin", vacant_rooms: 8, price: 60 }
  ];
And produces the following output:
<ol><li>Queen, 5, $100</li><li>Double, 3, $75</li><li>Twin, 8, $60</li></ol>

ANSWER:
const HotelRoomList = () => {
  const listRooms = rooms.map((d, i) => (
    <li key={i}>
      {d.room_type}, {d.vacant_rooms}, ${d.price}
    </li>
  ));
  return (
    <div className="rooms-list">
      <ol>{listRooms}</ol>
    </div>
  );
};

  
Question #2
2. Write a function in Javascript, which receives NUMBER and has the next logic:
a) it prints "foo" if NUMBER is divisible by 2;
b) it prints "bar" if NUMBER is divisible by 7;
c) it prints "foobar" if NUMBER is divisible by 14;
d) it prints NUMBER value for other cases;
note: NUMBER is a positive integer number;

ANSWER:
function checkNum(num) {
 if(!Number.isInteger(num) || num < 0){
   return "Please provide positive integer value"
 }
   if(num % 14 === 0 && num  !== 0){
     return "foobar"
    // console.log("foo")
   } else if(num % 7 === 0 && num  !== 0) {
     return "bar"
    // console.log("bar")
   }else if(num % 2 === 0 && num  !== 0) {
     return "foo"
    //  console.log("foobar")
   } else {
     return num
   }
}

Question #3:
3. Let's say you have a file with a following structure:
"id,name,value
1,Dan,150
2,Peter,300
3,Mark,400
4,Victor,600"

Write a function in node.js that reads this file and returns the number, which is a sum of all "value" numbers from the file;

ANSWER:

const fs = require("fs");

function SumFileValue() {
  const arrValue = [];
  fs.readFile("input.txt", function (err, data) {
    if (err) throw err;

    const arr = data.toString().replace(/\r\n/g, "\n").split("\n").splice(1);

    for (let i = 0; i < arr.length - 1; i++) {
      arrValue.push(parseInt(arr[i].split(",")[2]));
    }
    const arrSum = arrValue.reduce((a, b) => a + b, 0);
    console.log("Sum = " + arrSum);
  });
}

SumFileValue();

Question #4:
4. Refactor the code below.
(do not create functions or constants, code refactor is required only)
 

 ANSWER:
 if (province === 'ONTARIO'){
    rate = ONTARIO_RATE;
  } else if (province == 'QUEBEC') {
    rate = QUEBEC_RATE;
    points = 2;
  } else if (province == 'ALBERTA') {
    rate =  ALBERTA_RATE;
  } else {
    rate = 1;
  }
    amt = base * rate;
    calc = 2 * basis(amt) + extra(amt) * 1.05;



Question #5:
5. Write a small react or react native app that uses this weather api:
https://www.metaweather.com/api/ *
Your app should allow the user to search for a city and see that day's forecast.
Styling is not important, you can use default browser styles.

*Note: some people have reported that this API does not have CORS enabled on their server, in this case if you are having difficulty with CORS you can launch chrome with CORS disabled: https://stackoverflow.com/questions/3102819/disable-same-origin-policy-in-chrome or you can select a different API of your preference: https://rapidapi.com/category/Weather

ANSWER:
1) Clone repository to local device "git clone https://github.com/melnykandrii/SimpleWeatherApp" 
2) Open terminal while in the repo root folder (ex. .../SimpleWeatherApp/) run "yarn"
3) After "yarn android" or "yarn ios" to run Expo && App on the simulator/emulator 

